<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>程序开发常见问题和职业素养</title>
      <link href="/2023/07/06/ProgrammingIssues/"/>
      <url>/2023/07/06/ProgrammingIssues/</url>
      
        <content type="html"><![CDATA[<h1 id="1-解决常见的问题"><a href="#1-解决常见的问题" class="headerlink" title="1.解决常见的问题"></a>1.解决常见的问题</h1><h2 id="1-1-怎么写代码？"><a href="#1-1-怎么写代码？" class="headerlink" title="1.1 怎么写代码？"></a>1.1 怎么写代码？</h2><p>对于一个需求或者bug，第一时间知道要做什么来解决这个问题，但要开始写的时候，确不知道如何下手，对于新手来说这是很常见的情况。如果给你一个需求：写一个函数，input两个对象列表，output一个对象列表，列出两个列表中相同的对象。那么你首先会怎么做，或者怎么想？<br>1.不要直接去想我要怎么写，用什么循环、算法去解题，先去看提出的这个需求有没有问题。<br>2.面对提出的需求，一定要思考，提出自己的问题，然后再分解成几个小点，再分别去解决这几个小点。<br>那么如果我再给出input对象列表中的属性，如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int P_1&#123;get;set;&#125;</span><br><span class="line">string P_2&#123;get;set;&#125;</span><br></pre></td></tr></table></figure><p>相同对象的要求是：P_1和P_2两个属性的值都相同，那么看以下代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">public static List&lt;MyObject&gt; FindCommonObjects(List&lt;MyObject&gt; list1, List&lt;MyObject&gt; list2)</span><br><span class="line">    &#123;</span><br><span class="line">        List&lt;MyObject&gt; commonObjects = new List&lt;MyObject&gt;();</span><br><span class="line"></span><br><span class="line">        foreach (var obj1 in list1)</span><br><span class="line">        &#123;</span><br><span class="line">            foreach (var obj2 in list2)</span><br><span class="line">            &#123;</span><br><span class="line">                if (obj1== obj2)</span><br><span class="line">                &#123;</span><br><span class="line">                    commonObjects.Add(obj1);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return commonObjects;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这实际上写的就有问题，if (obj1&#x3D;&#x3D; obj2)比较的是两个对象，肯定是不相同的，最终的结果commonObjects里啥也没有，这就是自己写出来的bug。所以，知道了一个需求，一定要仔细去推敲每个小点的含义，通常不注意就犯错了，那么改进之后的方法如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">public static List&lt;MyObject&gt; FindCommonObjects(List&lt;MyObject&gt; list1, List&lt;MyObject&gt; list2)</span><br><span class="line">    &#123;</span><br><span class="line">        List&lt;MyObject&gt; commonObjects = new List&lt;MyObject&gt;();</span><br><span class="line"></span><br><span class="line">        foreach (var obj1 in list1)</span><br><span class="line">        &#123;</span><br><span class="line">            foreach (var obj2 in list2)</span><br><span class="line">            &#123;</span><br><span class="line">                if (obj1.P_1 == obj2.P_1 &amp;&amp; obj1.P_2 == obj2.P_2)</span><br><span class="line">                &#123;</span><br><span class="line">                    commonObjects.Add(obj1);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return commonObjects;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这就可以满足这个需求了，当然有些强迫症患者可以再写的美观一些，这里暂且不继续深入。这里想表述的是：对于一个需求，一定要去仔细推敲其文字里的含义，这对于一个开发者来说是比较敏感的！</p><h2 id="1-2-程序报错了，怎么办？"><a href="#1-2-程序报错了，怎么办？" class="headerlink" title="1.2 程序报错了，怎么办？"></a>1.2 程序报错了，怎么办？</h2><h3 id="1-2-1-编译错误"><a href="#1-2-1-编译错误" class="headerlink" title="1.2.1 编译错误"></a>1.2.1 编译错误</h3><img src="/img/rogrammingIssuesImg/01.png" alt="示例图片" style="zoom:50%;" />一般指语法错误或者很明显的逻辑错误，编译工具（visual studio）会帮我们定位出错的大概位置，通过分析上下文来修改错误。<h3 id="1-2-2运行时错误"><a href="#1-2-2运行时错误" class="headerlink" title="1.2.2运行时错误"></a>1.2.2运行时错误</h3><p>有时候编译过了，但运行的时候程序报了异常，例如空对象异常，索引越界，强制类型转换失败，打开或读取文件失败等等。<br><img src="/img/rogrammingIssuesImg/02.png" alt="示例图片" style="zoom:50%;" /><br><img src="/img/rogrammingIssuesImg/03.jpg" alt="示例图片" style="zoom:50%;" /><br>如这个例子，编译的时候不会报错，但程序走到特定位置的时候，就报空异常了，这只是因为大小写不同导致没获取到对值，其实引发空异常的原因还有很多，所以谨记：该进行空判断的时候需要进行判断，不要相信任何对象；写函数入参要判断，函数返回值要判断。<br>这里想表述的是：写的时候尽量细心一些，这些错误是可以避免的，否则程序出错的时候又得看代码，没看出来是不是就得debug了，这一来二去浪费了多少时间……</p><h3 id="1-2-3-DEBUG"><a href="#1-2-3-DEBUG" class="headerlink" title="1.2.3 DEBUG"></a>1.2.3 DEBUG</h3><p>编译工具（visual studio）中，基本都有设置断点的功能，设置了断点，让程序以调试模式运行，或者附加程序跟断点。每执行到一句代码，可以查看之前定义的变量的值来进行分析，可以添加监视，或者用即时窗口来看对应属性的值，同时还可以查看函数调用堆栈，帮助分析问题。<br><img src="/img/rogrammingIssuesImg/04.png" alt="示例图片" style="zoom:50%;" /><br><img src="/img/rogrammingIssuesImg/05.png" alt="示例图片" style="zoom:50%;" /><br>看了调试样例，有时候找到报错或者有问题的地方了，还是不知道咋解决，怎么办呢？</p><h3 id="1-2-4-搜索"><a href="#1-2-4-搜索" class="headerlink" title="1.2.4 搜索"></a>1.2.4 搜索</h3><p>善用搜索引擎，参考业内成熟实现，当然最多的肯定是去stack overflow上找答案。技术性的内容还得Google,如果有些访问不到的，退而求其次，选择Bing国际版，最重要的一点，能用英文搜就用英文搜，也不是不能百度，搜索时要言简意赅，关键字分隔开。以下推荐几个技术站点：<br><a href="https://github.com/">github</a><br><a href="https://stackoverflow.com/">stackoverflow</a><br><a href="https://www.csdn.net/">CSDN</a><br><a href="https://www.w3school.com/">W3school</a></p><h1 id="2-程序员的职业素养（要求）"><a href="#2-程序员的职业素养（要求）" class="headerlink" title="2.程序员的职业素养（要求）"></a>2.程序员的职业素养（要求）</h1><h2 id="2-1-合格的程序员（初级程序员的要求）"><a href="#2-1-合格的程序员（初级程序员的要求）" class="headerlink" title="2.1 合格的程序员（初级程序员的要求）"></a>2.1 合格的程序员（初级程序员的要求）</h2><h3 id="2-1-1-主要职责"><a href="#2-1-1-主要职责" class="headerlink" title="2.1.1 主要职责"></a>2.1.1 主要职责</h3><ul><li>80% 编程&#x2F;软件开发</li><li>10% 需求定义与管理</li><li>10% 测试</li></ul><h3 id="2-1-2-版本管理工具"><a href="#2-1-2-版本管理工具" class="headerlink" title="2.1.2 版本管理工具"></a>2.1.2 版本管理工具</h3><p>在多人协同开发一个项目的时候，开发代码版本迭代的工具诸如：SVN,Git。</p><ul><li>注意：</li></ul><ol><li>每次上传代码前先下载，再上传，避免覆盖别人提交的代码；</li><li>上传的时候，做好备注，如修改了什么或增加了什么功能，最好能加上GUID，方便定位代码位置；</li><li>编辑之前可以先把代码上锁，如果不上锁看，别人修改也会覆盖修改的内容，但记得修改完之后一定记得解锁；</li></ol><h3 id="2-1-3-责任和义务"><a href="#2-1-3-责任和义务" class="headerlink" title="2.1.3 责任和义务"></a>2.1.3 责任和义务</h3><ul><li>写的时候要考虑易用性、复用性、可读性：<br>我们写的代码不仅仅是为了解决一个需求和bug，也是写给我们自己看的，所以写的时候一定要写好注释，注明GUID，在本地记录修改记录，以便于以后要再进行修改的时候在进行update。</li><li>自己的责任自己承担<br>出现bug或者review的时候，不要想着先辩解，不是我的责任之类的，也别总想着是谁写的，甩锅给别人。要承担起调查的责任，经验的来源往往是你多次bug的积累。</li></ul><h3 id="2-1-4-程序员一定要深入思考"><a href="#2-1-4-程序员一定要深入思考" class="headerlink" title="2.1.4 程序员一定要深入思考"></a>2.1.4 程序员一定要深入思考</h3><ul><li>现在给这么一个需求：<br>做一个登录画面，要求画面上要有用户名和密码的输入框，还有一个提交按钮，用户登录后，界面切换到对应的首页。<br>请问你会首先想到什么，或者想问提出这个需求的人些什么问题？</li></ul><h3 id="2-1-5-负责人的代码"><a href="#2-1-5-负责人的代码" class="headerlink" title="2.1.5 负责人的代码"></a>2.1.5 负责人的代码</h3><ul><li>COPY：<br>不要一味的copy别人的代码，即时要copy，也要明白每行代码的意义。或者在移植某个功能的时候，不要一味的赋值粘贴就完了，写的不好的可以重写，写的好的沿用，这才是有意义的学习；</li><li>复盘：<br>上面提到过，自己写过的代码，要修改时，如何才能快速定位到要修改的位置？GUID，程序dll，自己所留存的记录都有用。</li></ul><h3 id="2-1-6-编码规范"><a href="#2-1-6-编码规范" class="headerlink" title="2.1.6 编码规范"></a>2.1.6 编码规范</h3><p>这个我记得师哥和雄总单独讲过几课，我这里就不全部描述了，只列举几个；</p><ol><li>SQL不能写构造函数或者成员变量中，会导致设计器打不开，为了方便后期维护，可以抽到数据库表中，方便修改；</li><li>代码注释要求，可以参考我的这边文档<a href="https://blog.csdn.net/qq_43732429/article/details/108034518">C#如何写注释</a></li><li>遵循开闭原则，代码不能耦合性高；</li><li>业务逻辑不要写到属性里面,诸如使用一些业务参数的时候，记得先把参数写到初始化的方法里；</li><li>新项目参考本项目编码规范，老项目改造，与现有风格保持一致；</li><li>对变量命名和方法命名得遵循规范；</li></ol><p>其实这篇文章写的很好，大家可以参考下<a href="https://mp.weixin.qq.com/s/fOzQlvvfVA6Q5m-Pvqc40Q">C#编码规范</a></p>]]></content>
      
      
      <categories>
          
          <category> 文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#如何写注释</title>
      <link href="/2023/07/05/C-annotation/"/>
      <url>/2023/07/05/C-annotation/</url>
      
        <content type="html"><![CDATA[<p>#1 习惯的sumary注释</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">代码块儿示例</span></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 校验是否为传染病诊断</span><br><span class="line">///&#123;4D8AC51B-D133-4EDD-BE07-AA2A718C618A&#125;</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;param name=&quot;owner&quot;&gt;&lt;/param&gt;</span><br><span class="line">/// &lt;param name=&quot;patient&quot;&gt;&lt;/param&gt;</span><br><span class="line">/// &lt;param name=&quot;patientType&quot;&gt;&lt;/param&gt;</span><br><span class="line">/// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">/// &lt;exception cref=&quot;NotImplementedException&quot;&gt;&lt;/exception&gt;</span><br><span class="line">public int RegisterDiseaseReport(IWin32Window owner, Patient patient, ServiceTypes patientType)</span><br><span class="line">&#123;</span><br><span class="line">    throw new NotImplementedException();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一般在码字的过程中很多开发者会习惯这么写注释，只添加了方法描述，或者换行增加GUID显示，但这么写的话，光标停在上面的时候只显示纯文本，别人看到也不知道具体怎么用这个方法。如下图所示，这么写不如不写。<br><img src="/img/AnnotationImg/01.png" alt="显示效果" style="zoom:50%;" /></p><p>其实当写一个方法名或者变量名的时候，本来就应该从一定程度上描述具体作用是啥，起名的时候见名知意，这样的话很多时候不需要加注释去告诉别人这是干啥的。注释要表达的是别人看代码不能一眼看出来的东西，而且注释不光是写给别人看的，更多时候是方便自己。如下所示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">代码块儿示例</span></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 校验是否为传染病诊断&lt;see langword=&quot;int&quot;/&gt; </span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;remarks&gt;返回值&lt;see cref=&quot;int&quot;/&gt;大于1表示校验正常，为传染病，小于0代表校验异常;&lt;br&gt;</span><br><span class="line">/// &lt;/br&gt;guid：&#123;4D8AC51B-D133-4EDD-BE07-AA2A718C618A&#125; </span><br><span class="line">/// &lt;/remarks&gt;</span><br><span class="line">/// &lt;param name=&quot;owner&quot;&gt;&lt;/param&gt;</span><br><span class="line">/// &lt;param name=&quot;patient&quot;&gt;&lt;/param&gt;</span><br><span class="line">/// &lt;param name=&quot;patientType&quot;&gt;&lt;/param&gt;</span><br><span class="line">/// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">/// &lt;exception cref=&quot;NotImplementedException&quot;&gt;&lt;/exception&gt;</span><br><span class="line">public int RegisterDiseaseReport(IWin32Window owner, Patient patient, ServiceTypes patientType)</span><br><span class="line">&#123;</span><br><span class="line">    throw new NotImplementedException();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/img/AnnotationImg/02.png" alt="显示效果" style="zoom:50%;" />严格地说，这种注释只是注释的一种，我演示的只是它的一种功能，即在VS之类的工具显示成员信息，它最大的功能其实是生成相应的API文档。更多的信息可以参阅微软的文档<div class="note info flat"><p>参考：<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/xmldoc">XML文档注释</a></p></div> <p>#2 我的观点<br>举这个例子并不是说时刻把注释写这么清楚，比如带上remarks和example什么的，但是类型之类多写点see肯定是好的，写业务代码的人确实无所谓，因为只有你和以后接手的某人会看到。可以根据自身情况，觉得少什么，就添加什么，比如我一般只关心作用，怎么调用。简单例子必须有。<br>写的时候只有你和上帝知道，3周之后，只有上帝知道……</p>]]></content>
      
      
      <categories>
          
          <category> 文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法汇总</title>
      <link href="/2023/06/15/hellow/"/>
      <url>/2023/06/15/hellow/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Markdown语法自带格式"><a href="#1-Markdown语法自带格式" class="headerlink" title="1.Markdown语法自带格式"></a>1.Markdown语法自带格式</h1><div class="note info flat"><p>参考：<a href="https://blog.csdn.net/u014061630/article/details/81359144">Markdown语法图文全面详解</a></p></div><h2 id="1-1-代码块"><a href="#1-1-代码块" class="headerlink" title="1.1 代码块"></a>1.1 代码块</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">\```shell</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmd终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br><span class="line">\```</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmd终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-2-多级标题"><a href="#1-2-多级标题" class="headerlink" title="1.2 多级标题"></a>1.2 多级标题</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># H1</span></span><br><span class="line"><span class="section">## H2</span></span><br><span class="line"><span class="section">### H3</span></span><br><span class="line"><span class="section">#### H4</span></span><br><span class="line"><span class="section">##### H5</span></span><br><span class="line"><span class="section">###### H6</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>见本文章标题!</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-3-文字样式"><a href="#1-3-文字样式" class="headerlink" title="1.3 文字样式"></a>1.3 文字样式</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线演示<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">文字<span class="strong">**加粗**</span>演示</span><br><span class="line"></span><br><span class="line">文字<span class="emphasis">*斜体*</span>演示</span><br><span class="line"></span><br><span class="line">文本<span class="code">`高亮`</span>演示</span><br><span class="line"></span><br><span class="line">文本~~删除~~线演示</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span> = <span class="string">5</span>&gt;</span></span>5号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>黑体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">blue</span>&gt;</span></span>蓝色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">MistyRose</span>&gt;</span></span>这里的背景色是：MistyRosen，此处输入任意想输入的内容<span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p><u>下划线演示</u></p><p>文字<strong>加粗</strong>演示</p><p>文字<em>斜体</em>演示</p><p>文本<code>高亮</code>演示</p><p>文本<del>删除</del>线演示</p><p><font size = 5>5号字</font><br><font face="黑体">黑体</font><br><font color=blue>蓝色</font></p><table><tr><td bgcolor=MistyRose>这里的背景色是：MistyRosen，此处输入任意想输入的内容</td></tr></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note info flat"><p>上述要点可参考:<a href="https://blog.csdn.net/qq_43732429/article/details/108034518">【Markdown语法】字体颜色大小及文字底色设置</a></p></div><h2 id="1-4-引用"><a href="#1-4-引用" class="headerlink" title="1.4 引用"></a>1.4 引用</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt;  C#</span></span><br><span class="line"><span class="quote">&gt; 二级引用演示</span></span><br><span class="line"><span class="quote">&gt; ORACLE</span></span><br><span class="line"><span class="quote">&gt; &gt;外键</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;事务</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;<span class="strong">**行级锁**</span>(引用内部一样可以用格式)</span></span><br><span class="line"><span class="quote">&gt; </span></span><br><span class="line"><span class="quote">&gt; ....</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><blockquote><p> C#<br>二级引用演示<br>ORACLE</p><blockquote><p>外键</p><p>事务</p><p><strong>行级锁</strong>(引用内部一样可以用格式)</p></blockquote><p>….</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-5-分割线"><a href="#1-5-分割线" class="headerlink" title="1.5 分割线"></a>1.5 分割线</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><hr><hr><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-6-列表-跟空格都可以"><a href="#1-6-列表-跟空格都可以" class="headerlink" title="1.6 列表(*,+,-跟空格都可以)"></a>1.6 列表(*,+,-跟空格都可以)</h2><h3 id="1-6-1-无序列表"><a href="#1-6-1-无序列表" class="headerlink" title="1.6.1 无序列表"></a>1.6.1 无序列表</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> Java</span><br><span class="line"><span class="bullet">*</span> C#</span><br><span class="line"><span class="bullet">*</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">+</span> Java</span><br><span class="line"><span class="bullet">+</span> C#</span><br><span class="line"><span class="bullet">+</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> Java</span><br><span class="line"><span class="bullet">-</span> C#</span><br><span class="line"><span class="bullet">-</span> ...</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ul><li>Java</li><li>C#</li><li>…</li></ul><ul><li>Java</li><li>C#</li><li>…</li></ul><ul><li>Java</li><li>C#</li><li>…</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="1-6-2-有序列表"><a href="#1-6-2-有序列表" class="headerlink" title="1.6.2 有序列表"></a>1.6.2 有序列表</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 注意后面有空格</span></span><br><span class="line"><span class="bullet">1.</span> </span><br><span class="line"><span class="bullet">2.</span> </span><br><span class="line"><span class="bullet">3.</span> </span><br><span class="line"><span class="bullet">4.</span> </span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>1.<br>2.<br>3.<br>4. </p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-7-图片"><a href="#1-7-图片" class="headerlink" title="1.7 图片"></a>1.7 图片</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 本地图片</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/img/background01.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;示例图片&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:50%;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="section"># 在线图片</span></span><br><span class="line">https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown<span class="emphasis">_pic/img/code.png</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>本地图片:<br><img src="/img/background01.jpg" alt="示例图片" style="zoom:50%;" /><br>在线图片:<br><a href="https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png">https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-8-表格"><a href="#1-8-表格" class="headerlink" title="1.8 表格"></a>1.8 表格</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 项目标号 | 资金     | 备注 |</span><br><span class="line">| -------- | -------- | ---- |</span><br><span class="line">| 1        | 100，000 | 无   |</span><br><span class="line">| 2        | 200，000 | 无   |</span><br><span class="line">| 3        | 300,600  | 重要 |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><table><thead><tr><th>项目标号</th><th>资金</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>100，000</td><td>无</td></tr><tr><td>2</td><td>200，000</td><td>无</td></tr><tr><td>3</td><td>300,600</td><td>重要</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-9-公式"><a href="#1-9-公式" class="headerlink" title="1.9 公式"></a>1.9 公式</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\Gamma(z)=\int<span class="emphasis">_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt.</span></span><br><span class="line"><span class="emphasis">$$</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>$$<br>\Gamma(z)&#x3D;\int_0^\infty t^{z-1}e^{-t}dt.<br>$$</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
